{
    "swagger": "2.0",
    "info": {
        "description": "Enterprise messaging service for reliable delivery and tracking of outbound communications",
        "title": "XXX Message Delivery Service",
        "contact": {
            "name": "mustafa berat aru"
        },
        "version": "1.0"
    },
    "paths": {
        "/api/messages/sent": {
            "get": {
                "description": "Get a paginated list of successfully delivered messages with delivery timestamps",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "messages"
                ],
                "summary": "Retrieve delivered messages",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number for pagination (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of messages per page (default: 10, max: 100)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of delivered messages",
                        "schema": {
                            "$ref": "#/definitions/model.SentMessagesResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/model.StartStopResponse"
                        }
                    }
                }
            }
        },
        "/api/service": {
            "post": {
                "description": "Start or stop the automated message delivery process",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "service"
                ],
                "summary": "Control message delivery service",
                "parameters": [
                    {
                        "description": "Service Control Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.StartStopRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Operation successful",
                        "schema": {
                            "$ref": "#/definitions/model.StartStopResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/model.StartStopResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/model.StartStopResponse"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Check the operational status of the message delivery service",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "monitoring"
                ],
                "summary": "Service health check",
                "responses": {
                    "200": {
                        "description": "Service health information",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.ActionType": {
            "type": "string",
            "enum": [
                "start",
                "stop"
            ],
            "x-enum-varnames": [
                "ActionStart",
                "ActionStop"
            ]
        },
        "model.Message": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isSent": {
                    "type": "boolean"
                },
                "messageId": {
                    "description": "ID received from webhook response",
                    "type": "string"
                },
                "recipient": {
                    "type": "string"
                },
                "sentAt": {
                    "type": "string"
                }
            }
        },
        "model.SentMessagesResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Message"
                    }
                }
            }
        },
        "model.StartStopRequest": {
            "type": "object",
            "properties": {
                "action": {
                    "description": "Use ActionType enum",
                    "enum": [
                        "start",
                        "stop"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.ActionType"
                        }
                    ]
                }
            }
        },
        "model.StartStopResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    }
}